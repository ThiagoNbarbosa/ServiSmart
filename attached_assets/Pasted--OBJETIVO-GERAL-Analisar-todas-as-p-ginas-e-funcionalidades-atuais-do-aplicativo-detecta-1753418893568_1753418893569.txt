# ‚¨áÔ∏è OBJETIVO GERAL:
# Analisar todas as p√°ginas e funcionalidades atuais do aplicativo,
# detectar funcionalidades ausentes, pontos de melhoria e sugerir prioriza√ß√£o de desenvolvimento
# com base na metodologia: Mapeamento ‚Üí An√°lise ‚Üí Prioriza√ß√£o.

### üß† CONTEXTO T√âCNICO:
# Linguagem: TypeScript / React (client/) + Express/Node.js (server/)
# Arquitetura: Frontend (client/src/pages), Backend (server/)
# Voc√™ tem acesso ao c√≥digo e pode navegar pelos diret√≥rios e arquivos livremente.

# üöÄ FASE 1 - MAPEAMENTO DO APP

1. Liste todas as rotas/p√°ginas encontradas em client/src/pages (ex: dashboard.tsx, team-information.tsx, etc.)
2. Para cada p√°gina, liste as funcionalidades dispon√≠veis vis√≠veis no c√≥digo (bot√µes, forms, uso de hooks, componentes).
3. Identifique se existem p√°ginas ausentes comuns, como: Configura√ß√µes, Minha Conta, Perfil, Login, Cadastro, Suporte, FAQ.
4. Crie um fluxograma simples da navega√ß√£o (em texto), indicando caminhos principais.

# üß™ FASE 2 - AN√ÅLISE FUNCIONAL E T√âCNICA

1. Verifique para cada funcionalidade se ela est√° implementada corretamente (ex: fun√ß√µes de exclus√£o/edi√ß√£o est√£o completas ou apenas com console.log).
2. Aponte problemas ou limita√ß√µes t√©cnicas vis√≠veis, como:
   - Falta de valida√ß√£o de formul√°rio,
   - Aus√™ncia de loading states,
   - C√≥digos incompletos,
   - Aus√™ncia de manipula√ß√£o de erros.

# üß© FASE 3 - PRIORIZA√á√ÉO

1. Use uma matriz de Impacto vs Esfor√ßo (simplificada em texto) para sugerir:
   - Funcionalidades de alto impacto e baixo esfor√ßo (corrigir ou adicionar agora).
   - Funcionalidades de alto impacto e alto esfor√ßo (planejar).
   - Funcionalidades de baixo impacto (adiar ou descartar).
2. Liste melhorias r√°pidas que podem ser aplicadas hoje sem quebrar o sistema.

# ‚úÖ ENTREGA ESPERADA DO AGENTE

- Tabela com p√°ginas e funcionalidades.
- Lista de funcionalidades ausentes (por tipo).
- Pontos t√©cnicos cr√≠ticos a serem corrigidos.
- Sugest√µes priorizadas com base no impacto.
- Sugest√£o de pr√≥ximas a√ß√µes (ex: criar p√°gina de Configura√ß√µes, ativar edi√ß√£o real em Team Info, etc.).

# ‚ö†Ô∏è IMPORTANTE:
- N√ÉO execute a√ß√µes destrutivas.
- N√ÉO altere arquivos ainda.
- Somente gere o diagn√≥stico completo para o desenvolvedor tomar decis√µes.

# üîÅ COMANDO FINAL
Inicie a an√°lise a partir do diret√≥rio raiz do projeto e retorne o relat√≥rio completo conforme descrito acima.
